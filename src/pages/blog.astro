---
import Layout from '../layouts/Layout.astro';
---

<Layout
  title="Maryam Akhyani | Blog"
  description="Blog posts and articles by Maryam Akhyani"
  currentPath="/blog"
>
  <!-- Logo -->
  <a href="/" class="logo" title="Maryam Akhyani"></a>

  <section id="blog">
    <div class="container">
      <div class="blog-header">
        <h1>Blog</h1>
        <div class="filter-dropdown">
          <button
            class="filter-toggle"
            id="filterToggle"
            aria-label="Filter blog posts"
          >
            <svg
              width="18"
              height="18"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <polygon points="22,3 2,3 10,12.46 10,19 14,21 14,12.46"></polygon>
            </svg>
          </button>
          <div class="filter-menu" id="filterMenu">
            <!-- Filter options will be dynamically generated by JavaScript -->
          </div>
        </div>
      </div>
      <div class="blog-list">
        <a
          href="/blog/analytics"
          class="blog-card"
          id="post-analytics"
          style="text-decoration: none; color: inherit"
        >
          <img
            class="blog-card-image"
            src="https://images.unsplash.com/photo-1551288049-bebda4e38f71?q=80&w=1000&auto=format&fit=crop"
            alt="Analytics dashboard screenshot"
          />
          <div class="blog-card-content">
            <h2>How We Redesigned Our Analytics Platform</h2>
            <div class="meta">April 10, 2024 &bull; Product Strategy</div>
            <p>
              Discover the journey behind our B2B analytics platform
              redesign, the challenges we faced, and the impact on user
              engagement and business outcomes.
            </p>
            <div class="tags">
              <span class="tag">Product Strategy</span>
              <span class="tag">UX Research</span>
              <span class="tag">Data Analysis</span>
            </div>
          </div>
        </a>
        <a
          href="/blog/mobile-app"
          class="blog-card"
          id="post-mobile-app"
          style="text-decoration: none; color: inherit"
        >
          <img
            class="blog-card-image"
            src="https://images.unsplash.com/photo-1516321497487-e288fb19713f?q=80&w=1000&auto=format&fit=crop"
            alt="Mobile app launch"
          />
          <div class="blog-card-content">
            <h2>Launching a Mobile App: Lessons Learned</h2>
            <div class="meta">May 2, 2024 &bull; Go-to-Market</div>
            <p>
              From ideation to App Store launch, here are the key takeaways
              and strategies that helped us acquire 50k users in just three
              months.
            </p>
            <div class="tags">
              <span class="tag">Go-to-Market</span>
              <span class="tag">Agile Methodologies</span>
              <span class="tag">User Testing</span>
            </div>
          </div>
        </a>
        <a
          href="/blog/proactive-navigation"
          class="blog-card"
          id="post-proactive-navigation"
          style="text-decoration: none; color: inherit"
        >
          <img
            class="blog-card-image"
            src="/AltRoute.jpg"
            alt="Navigation alternative route feature transformation"
          />
          <div class="blog-card-content">
            <h2>Case Study: From Reactive to Proactive Navigation</h2>
            <div class="meta">October 24, 2025 &bull; Case Study</div>
            <p>
              How transforming a broken alternative route feature into an intelligent co-pilot increased engagement by 45% and rebuilt user trust.
            </p>
            <div class="tags">
              <span class="tag">Case Study</span>
              <span class="tag">Navigation</span>
              <span class="tag">User Experience</span>
              <span class="tag">Product Strategy</span>
            </div>
          </div>
        </a>
        <a
          href="/blog/feature-adoption-discoverability"
          class="blog-card"
          id="post-feature-adoption-discoverability"
          style="text-decoration: none; color: inherit"
        >
          <img
            class="blog-card-image"
            src="https://images.unsplash.com/photo-1541746972996-4e0b0f43e02a?q=80&w=1000&auto=format&fit=crop"
            alt="A/B testing"
          />
          <div class="blog-card-content">
            <h2>Driving Growth with A/B Testing</h2>
            <div class="meta">July 8, 2024 &bull; Experimentation</div>
            <p>
              How a company-wide A/B testing framework empowered teams to
              make data-driven decisions and boosted our conversion metrics.
            </p>
            <div class="tags">
              <span class="tag">Experimentation</span>
              <span class="tag">Product Growth</span>
            </div>
          </div>
        </a>
      </div>
    </div>
  </section>
</Layout>

<style>
  /* Logo Styles */
  .logo {
    position: fixed;
    top: 1.5rem;
    left: 3rem;
    z-index: 1001;
    font-family: "Playfair Display", serif;
    font-size: 0;
    font-weight: 400;
    text-decoration: none;
    color: #d96d2b;
    transition: all 0.3s ease;
  }

  .logo::before {
    content: "Maryam";
    display: block;
    font-size: 1.2rem;
    line-height: 1;
    font-family: "Playfair Display", serif;
    font-weight: 400;
    transition: all 0.3s ease;
    transform-origin: center center;
  }

  .logo::after {
    content: "Akhyani";
    display: block;
    font-size: 1.2rem;
    line-height: 1.1;
    margin-top: -0.05em;
    font-family: "Playfair Display", serif;
    font-weight: 400;
    transition: all 0.3s ease;
    transform-origin: center center;
    padding-bottom: 0.1em;
  }

  .logo:hover {
    color: var(--primary-orange);
    transform: scale(1.05);
  }

  :global(body.dark-mode) .logo {
    color: #d4af37;
  }

  :global(body.dark-mode) .logo:hover {
    color: var(--primary-orange);
  }

  /* Blog post styles */
  .blog-list {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
  }

  .blog-card {
    background: var(--white);
    border-radius: 12px;
    box-shadow: var(--card-shadow);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease,
      background-color 0.3s ease, opacity 0.4s ease;
    display: flex;
    flex-direction: column;
    opacity: 0;
    transform: translateY(20px);
    animation: cardFadeIn 0.6s ease-out forwards;
  }

  .blog-card:nth-child(1) { animation-delay: 0.1s; }
  .blog-card:nth-child(2) { animation-delay: 0.2s; }
  .blog-card:nth-child(3) { animation-delay: 0.3s; }
  .blog-card:nth-child(4) { animation-delay: 0.4s; }

  @keyframes cardFadeIn {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .blog-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--card-shadow-hover);
  }

  .blog-card-image {
    width: 100%;
    height: 220px;
    object-fit: cover;
  }

  .blog-card-content {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .blog-card h2 {
    margin-bottom: 0.5rem;
    color: var(--primary-orange);
    font-size: 1.3rem;
    text-align: left;
  }

  .blog-card .meta {
    font-size: 0.95rem;
    color: #a88b6a;
    margin-bottom: 1rem;
  }

  .blog-card p {
    margin-bottom: 1rem;
    flex: 1;
  }

  .blog-card .tags {
    margin-top: auto;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .blog-card .tag {
    background-color: var(--light-bg);
    color: var(--primary-orange);
    padding: 0.25rem 0.75rem;
    border-radius: 999px;
    font-size: 0.8rem;
    font-weight: 500;
    transition: background-color 0.3s ease;
  }

  /* Blog Header with Filter */
  .blog-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 3rem;
    position: relative;
  }

  .blog-header h1 {
    margin-bottom: 0;
    flex: 1;
    font-size: 2.5rem;
    font-family: "Playfair Display", serif;
  }

  /* Filter Dropdown */
  .filter-dropdown {
    position: relative;
    margin-left: 2rem;
  }

  .filter-toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background: transparent;
    border: 1px solid rgba(61, 53, 46, 0.15);
    border-radius: 8px;
    color: rgba(61, 53, 46, 0.6);
    cursor: pointer;
    transition: all 0.2s ease;
    position: relative;
  }

  .filter-toggle:hover {
    background: rgba(61, 53, 46, 0.05);
    border-color: rgba(61, 53, 46, 0.25);
    color: var(--primary-orange);
    transform: translateY(-1px);
  }

  .filter-toggle.active {
    background: var(--primary-orange);
    border-color: var(--primary-orange);
    color: var(--white);
  }

  .filter-toggle svg {
    transition: all 0.2s ease;
  }

  .filter-toggle:hover svg {
    transform: scale(1.1);
  }

  .filter-toggle::after {
    content: "Filter";
    position: absolute;
    top: -35px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 0.3rem 0.6rem;
    border-radius: 4px;
    font-size: 0.75rem;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all 0.2s ease;
    pointer-events: none;
  }

  .filter-toggle:hover::after {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(-2px);
  }

  /* Dropdown Menu */
  .filter-menu {
    position: absolute;
    top: calc(100% + 8px);
    right: 0;
    min-width: 180px;
    max-width: 220px;
    background: var(--white);
    border: 1px solid rgba(61, 53, 46, 0.1);
    border-radius: 8px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-8px);
    transition: all 0.2s ease;
    z-index: 100;
    overflow: hidden;
  }

  .filter-menu.open {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  :global(.filter-option) {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.7rem 1rem;
    cursor: pointer;
    font-size: 0.85rem;
    color: var(--text-dark);
    transition: background-color 0.15s ease;
    border-bottom: 1px solid rgba(61, 53, 46, 0.06);
  }

  :global(.filter-option:last-child) {
    border-bottom: none;
  }

  :global(.filter-option:hover) {
    background: rgba(217, 109, 43, 0.06);
  }

  :global(.filter-option.active) {
    background: rgba(217, 109, 43, 0.1);
    color: var(--primary-orange);
    font-weight: 500;
  }

  :global(.filter-option .count) {
    font-size: 0.75rem;
    color: rgba(61, 53, 46, 0.5);
    font-weight: 400;
  }

  :global(.filter-option.active .count) {
    color: var(--primary-orange);
  }

  /* Dark mode adjustments */
  :global(body.dark-mode) .filter-toggle {
    border-color: rgba(233, 226, 217, 0.15);
    color: rgba(233, 226, 217, 0.6);
  }

  :global(body.dark-mode) .filter-toggle:hover {
    background: rgba(233, 226, 217, 0.05);
    border-color: rgba(233, 226, 217, 0.25);
  }

  :global(body.dark-mode) .filter-menu {
    background: var(--white);
    border-color: rgba(233, 226, 217, 0.1);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  }

  :global(body.dark-mode .filter-option) {
    color: var(--text-dark);
    border-color: rgba(233, 226, 217, 0.06);
  }

  :global(body.dark-mode .filter-option:hover) {
    background: rgba(217, 109, 43, 0.08);
  }

  :global(body.dark-mode .filter-option .count) {
    color: rgba(233, 226, 217, 0.5);
  }

  /* Hidden posts */
  .blog-card.hidden {
    display: none;
  }

  /* Mobile Responsive */
  @media (max-width: 1024px) {
    .logo {
      left: 1rem;
    }

    .logo::before,
    .logo::after {
      font-size: 1rem;
    }
  }

  @media (max-width: 768px) {
    .logo {
      background: rgba(255, 255, 255, 0.95);
      border-radius: 2rem;
      padding: 0.5rem 1.5rem;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
    }

    :global(body.dark-mode) .logo {
      background: rgba(45, 40, 36, 0.95);
    }

    .blog-list {
      grid-template-columns: 1fr;
    }

    .blog-header {
      flex-direction: column;
      align-items: flex-start;
      margin-bottom: 2.5rem;
    }

    .blog-header h1 {
      margin-bottom: 1rem;
      text-align: left;
      font-size: 2rem;
    }

    .filter-dropdown {
      margin-left: 0;
      align-self: flex-end;
      margin-top: -3rem;
    }

    .filter-toggle {
      width: 36px;
      height: 36px;
    }

    .filter-toggle svg {
      width: 16px;
      height: 16px;
    }

    .filter-menu {
      min-width: 160px;
      max-width: 200px;
    }
  }

  @media (max-width: 480px) {
    .blog-header {
      margin-bottom: 2rem;
    }

    .filter-toggle {
      width: 34px;
      height: 34px;
    }

    .filter-toggle svg {
      width: 15px;
      height: 15px;
    }

    .filter-menu {
      min-width: 140px;
      max-width: 180px;
      right: -20px;
    }

    :global(.filter-option) {
      padding: 0.6rem 0.8rem;
      font-size: 0.8rem;
    }

    .filter-toggle::after {
      display: none;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const blogCards = document.querySelectorAll(".blog-card");
    const filterToggle = document.getElementById("filterToggle");
    const filterMenu = document.getElementById("filterMenu");
    let currentFilterOptions: HTMLElement[] = [];
    let currentFilter = "all";

    // Function to generate dynamic filter options
    function generateDynamicFilters() {
      const categories = new Set<string>();

      blogCards.forEach((card) => {
        const cardTags = card.querySelectorAll(".tag");
        cardTags.forEach((tag) => {
          const categoryName = tag.textContent?.trim();
          if (categoryName) categories.add(categoryName);
        });
      });

      if (filterMenu) {
        filterMenu.innerHTML = "";
        currentFilterOptions = [];

        // Create "All Posts" option
        const allOption = document.createElement("div");
        allOption.className = "filter-option active";
        allOption.setAttribute("data-filter", "all");
        allOption.innerHTML = `All Posts <span class="count">(${blogCards.length})</span>`;
        filterMenu.appendChild(allOption);
        currentFilterOptions.push(allOption);

        // Create category options
        const sortedCategories = Array.from(categories).sort();
        sortedCategories.forEach((category) => {
          let count = 0;
          blogCards.forEach((card) => {
            const cardTags = card.querySelectorAll(".tag");
            cardTags.forEach((tag) => {
              if (tag.textContent?.trim() === category) {
                count++;
              }
            });
          });

          const option = document.createElement("div");
          option.className = "filter-option";
          option.setAttribute("data-filter", category);
          option.innerHTML = `${category} <span class="count">(${count})</span>`;
          filterMenu.appendChild(option);
          currentFilterOptions.push(option);
        });

        // Add click event listeners
        currentFilterOptions.forEach((option) => {
          option.addEventListener("click", handleFilterClick);
        });
      }
    }

    // Toggle dropdown
    filterToggle?.addEventListener("click", (e) => {
      e.stopPropagation();
      filterToggle.classList.toggle("active");
      filterMenu?.classList.toggle("open");
    });

    // Close dropdown when clicking outside
    document.addEventListener("click", (e) => {
      if (
        filterToggle && filterMenu &&
        !filterToggle.contains(e.target as Node) &&
        !filterMenu.contains(e.target as Node)
      ) {
        filterToggle.classList.remove("active");
        filterMenu.classList.remove("open");
      }
    });

    // Filter selection handler
    function handleFilterClick(event: Event) {
      const option = (event.target as HTMLElement).closest(".filter-option") as HTMLElement;
      if (!option) return;

      const filterValue = option.getAttribute("data-filter");
      currentFilter = filterValue || "all";

      // Update active states
      currentFilterOptions.forEach((opt) => opt.classList.remove("active"));
      option.classList.add("active");

      // Close dropdown
      filterToggle?.classList.remove("active");
      filterMenu?.classList.remove("open");

      // Apply filter
      blogCards.forEach((card) => {
        if (filterValue === "all") {
          card.classList.remove("hidden");
        } else {
          const cardTags = card.querySelectorAll(".tag");
          let hasMatchingTag = false;

          cardTags.forEach((tag) => {
            if (tag.textContent?.trim() === filterValue) {
              hasMatchingTag = true;
            }
          });

          if (hasMatchingTag) {
            card.classList.remove("hidden");
          } else {
            card.classList.add("hidden");
          }
        }
      });
    }

    // Initialize
    generateDynamicFilters();
  });
</script>